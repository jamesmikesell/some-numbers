:host {
  --color-1: light-dark(#f15c5c, #50322d);
  --color-2: light-dark(#f38347, #943501);
  --color-3: light-dark(#f5e94e, #817d00);
  --color-4: light-dark(#8ed091, #1b5e20);
  --color-5: light-dark(#5e9799, #840046);
  --color-6: light-dark(#66a7e8, #0062af);
  --color-7: light-dark(#9192d7, #282a93);
  --color-8: light-dark(#e8acff, #540dab);
  --color-9: light-dark(#b57881, #9e0b91);
  // These need to be defined in the parent component css... if things are displaying weird it's likely because
  // the defaults are being used here as it can't find the value specified in the parent.
  --_headerSpacing: var(--headerSpacing, -100px);
  --_cellGap: var(--cellGap, -100px);
}

.bg-muted {
  color: var(--mat-sys-on-surface-variant);

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background: var(--mat-sys-surface-variant);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }
}

.bg-muted.hidden.cell {
  box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--mat-sys-surface-variant);
}

.color-1 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-1);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-1);
  }
}

.color-2 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-2);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-2);
  }
}

.color-3 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-3);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-3);
  }
}

.color-4 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-4);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-4);
  }
}

.color-5 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-5);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-5);
  }
}

.color-6 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-6);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-6);
  }
}

.color-7 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-7);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-7);
  }
}

.color-8 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-8);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-8);
  }
}

.color-9 {
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border-radius: inherit;
    background-color: var(--color-9);
    transition: filter 0.5s ease-out, opacity 0.5s ease-out;
  }

  &.hidden {
    box-shadow: 0px 0px calc(14cqmin / var(--columnCount)) 0px var(--color-9);
  }
}

.cell {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  aspect-ratio: 1;
  border-radius: calc(2cqmin / var(--columnCount) * 3);
  width: calc((100cqmin - var(--_headerSpacing) - ((var(--columnCount) - 2) * var(--_cellGap)))/ var(--columnCount));
}

.cell.hidden::before {
  filter: blur(10px);
  opacity: 0;
}

.corner-number {
  position: absolute;
  top: 0cqmin;
  left: 0cqmin;
  font-size: calc(7cqmin / var(--columnCount) * 3);
  padding-left: calc(1.3cqmin / var(--columnCount) * 3);
  padding-right: calc(1.3cqmin / var(--columnCount) * 3);
  border-radius: calc(2cqmin / var(--columnCount) * 3);
  text-align: center;
}

.hidden .corner-number {
  visibility: hidden;
}

.main-number {
  font-size: calc(17cqmin / var(--columnCount) * 3);
  transition: filter 0.5s ease-out, opacity 0.5s ease-out;
}

.main-number.cleared-text {
  filter: blur(5px);
  opacity: 0;
}

.circle {
  border: 0.5cqmin solid;
  border-radius: 50%;
  width: calc(20cqmin / var(--columnCount) * 3);
  height: calc(20cqmin / var(--columnCount) * 3);
  display: flex;
  align-items: center;
  justify-content: center;
}


@keyframes wiggle {

  0%,
  100% {
    transform: rotate(0deg) translateX(0);
  }

  10% {
    transform: rotate(14deg) translateX(-5px);
  }

  30% {
    transform: rotate(-8deg) translateX(5px);
  }

  50% {
    transform: rotate(4deg) translateX(-3px);
  }

  70% {
    transform: rotate(-2deg) translateX(3px);
  }

  90% {
    transform: rotate(1deg) translateX(0);
  }
}

.wiggle {
  animation: wiggle 0.8s ease-in-out;
}

@keyframes spinDashed {
  to {
    transform: rotate(360deg);
  }
}

.processing::after {
  content: '';
  position: absolute;
  inset: -6px;
  border: 3px dashed rgba(0, 200, 255, 0.8);
  border-radius: 50%;
  animation: spinDashed 1.8s ease-in-out infinite;
  z-index: 1;
}